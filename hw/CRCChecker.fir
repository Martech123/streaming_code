;buildInfoPackage: chisel3, version: 3.2-SNAPSHOT, scalaVersion: 2.12.6
circuit CRCChecker : 
  module CRC32_D4 : 
    input clock : Clock
    input reset : Reset
    output io : {flip En : UInt<1>, flip Data : UInt<4>, flip Enable : UInt<1>, flip Initialize : UInt<1>, CrcError : UInt<1>}
    
    wire Enable : UInt<1>
    Enable <= UInt<1>("h00")
    wire Data : UInt<4>
    Data <= UInt<4>("h00")
    reg Crc : UInt<32>, clock with : (reset => (reset, UInt<32>("h0ffffffff"))) @[EthFcsPadding.scala 334:20]
    wire _T : UInt<1>[32] @[EthFcsPadding.scala 335:33]
    _T[0] <= UInt<1>("h00") @[EthFcsPadding.scala 335:33]
    _T[1] <= UInt<1>("h00") @[EthFcsPadding.scala 335:33]
    _T[2] <= UInt<1>("h00") @[EthFcsPadding.scala 335:33]
    _T[3] <= UInt<1>("h00") @[EthFcsPadding.scala 335:33]
    _T[4] <= UInt<1>("h00") @[EthFcsPadding.scala 335:33]
    _T[5] <= UInt<1>("h00") @[EthFcsPadding.scala 335:33]
    _T[6] <= UInt<1>("h00") @[EthFcsPadding.scala 335:33]
    _T[7] <= UInt<1>("h00") @[EthFcsPadding.scala 335:33]
    _T[8] <= UInt<1>("h00") @[EthFcsPadding.scala 335:33]
    _T[9] <= UInt<1>("h00") @[EthFcsPadding.scala 335:33]
    _T[10] <= UInt<1>("h00") @[EthFcsPadding.scala 335:33]
    _T[11] <= UInt<1>("h00") @[EthFcsPadding.scala 335:33]
    _T[12] <= UInt<1>("h00") @[EthFcsPadding.scala 335:33]
    _T[13] <= UInt<1>("h00") @[EthFcsPadding.scala 335:33]
    _T[14] <= UInt<1>("h00") @[EthFcsPadding.scala 335:33]
    _T[15] <= UInt<1>("h00") @[EthFcsPadding.scala 335:33]
    _T[16] <= UInt<1>("h00") @[EthFcsPadding.scala 335:33]
    _T[17] <= UInt<1>("h00") @[EthFcsPadding.scala 335:33]
    _T[18] <= UInt<1>("h00") @[EthFcsPadding.scala 335:33]
    _T[19] <= UInt<1>("h00") @[EthFcsPadding.scala 335:33]
    _T[20] <= UInt<1>("h00") @[EthFcsPadding.scala 335:33]
    _T[21] <= UInt<1>("h00") @[EthFcsPadding.scala 335:33]
    _T[22] <= UInt<1>("h00") @[EthFcsPadding.scala 335:33]
    _T[23] <= UInt<1>("h00") @[EthFcsPadding.scala 335:33]
    _T[24] <= UInt<1>("h00") @[EthFcsPadding.scala 335:33]
    _T[25] <= UInt<1>("h00") @[EthFcsPadding.scala 335:33]
    _T[26] <= UInt<1>("h00") @[EthFcsPadding.scala 335:33]
    _T[27] <= UInt<1>("h00") @[EthFcsPadding.scala 335:33]
    _T[28] <= UInt<1>("h00") @[EthFcsPadding.scala 335:33]
    _T[29] <= UInt<1>("h00") @[EthFcsPadding.scala 335:33]
    _T[30] <= UInt<1>("h00") @[EthFcsPadding.scala 335:33]
    _T[31] <= UInt<1>("h00") @[EthFcsPadding.scala 335:33]
    wire CrcNext : UInt<1>[32]
    CrcNext[0] <= _T[0]
    CrcNext[1] <= _T[1]
    CrcNext[2] <= _T[2]
    CrcNext[3] <= _T[3]
    CrcNext[4] <= _T[4]
    CrcNext[5] <= _T[5]
    CrcNext[6] <= _T[6]
    CrcNext[7] <= _T[7]
    CrcNext[8] <= _T[8]
    CrcNext[9] <= _T[9]
    CrcNext[10] <= _T[10]
    CrcNext[11] <= _T[11]
    CrcNext[12] <= _T[12]
    CrcNext[13] <= _T[13]
    CrcNext[14] <= _T[14]
    CrcNext[15] <= _T[15]
    CrcNext[16] <= _T[16]
    CrcNext[17] <= _T[17]
    CrcNext[18] <= _T[18]
    CrcNext[19] <= _T[19]
    CrcNext[20] <= _T[20]
    CrcNext[21] <= _T[21]
    CrcNext[22] <= _T[22]
    CrcNext[23] <= _T[23]
    CrcNext[24] <= _T[24]
    CrcNext[25] <= _T[25]
    CrcNext[26] <= _T[26]
    CrcNext[27] <= _T[27]
    CrcNext[28] <= _T[28]
    CrcNext[29] <= _T[29]
    CrcNext[30] <= _T[30]
    CrcNext[31] <= _T[31]
    Enable <= io.Enable @[EthFcsPadding.scala 337:10]
    Data <= io.Data @[EthFcsPadding.scala 338:8]
    node _T_1 = bits(Data, 0, 0) @[EthFcsPadding.scala 340:32]
    node _T_2 = bits(Crc, 28, 28) @[EthFcsPadding.scala 340:41]
    node _T_3 = xor(_T_1, _T_2) @[EthFcsPadding.scala 340:36]
    node _T_4 = and(Enable, _T_3) @[EthFcsPadding.scala 340:25]
    CrcNext[0] <= _T_4 @[EthFcsPadding.scala 340:15]
    node _T_5 = bits(Data, 1, 1) @[EthFcsPadding.scala 341:32]
    node _T_6 = bits(Data, 0, 0) @[EthFcsPadding.scala 341:42]
    node _T_7 = xor(_T_5, _T_6) @[EthFcsPadding.scala 341:36]
    node _T_8 = bits(Crc, 28, 28) @[EthFcsPadding.scala 341:51]
    node _T_9 = xor(_T_7, _T_8) @[EthFcsPadding.scala 341:46]
    node _T_10 = bits(Crc, 29, 29) @[EthFcsPadding.scala 341:61]
    node _T_11 = xor(_T_9, _T_10) @[EthFcsPadding.scala 341:56]
    node _T_12 = and(Enable, _T_11) @[EthFcsPadding.scala 341:25]
    CrcNext[1] <= _T_12 @[EthFcsPadding.scala 341:15]
    node _T_13 = bits(Data, 2, 2) @[EthFcsPadding.scala 342:32]
    node _T_14 = bits(Data, 1, 1) @[EthFcsPadding.scala 342:42]
    node _T_15 = xor(_T_13, _T_14) @[EthFcsPadding.scala 342:36]
    node _T_16 = bits(Data, 0, 0) @[EthFcsPadding.scala 342:52]
    node _T_17 = xor(_T_15, _T_16) @[EthFcsPadding.scala 342:46]
    node _T_18 = bits(Crc, 28, 28) @[EthFcsPadding.scala 342:61]
    node _T_19 = xor(_T_17, _T_18) @[EthFcsPadding.scala 342:56]
    node _T_20 = bits(Crc, 29, 29) @[EthFcsPadding.scala 342:71]
    node _T_21 = xor(_T_19, _T_20) @[EthFcsPadding.scala 342:66]
    node _T_22 = bits(Crc, 30, 30) @[EthFcsPadding.scala 342:81]
    node _T_23 = xor(_T_21, _T_22) @[EthFcsPadding.scala 342:76]
    node _T_24 = and(Enable, _T_23) @[EthFcsPadding.scala 342:25]
    CrcNext[2] <= _T_24 @[EthFcsPadding.scala 342:15]
    node _T_25 = bits(Data, 3, 3) @[EthFcsPadding.scala 343:32]
    node _T_26 = bits(Data, 2, 2) @[EthFcsPadding.scala 343:42]
    node _T_27 = xor(_T_25, _T_26) @[EthFcsPadding.scala 343:36]
    node _T_28 = bits(Data, 1, 1) @[EthFcsPadding.scala 343:52]
    node _T_29 = xor(_T_27, _T_28) @[EthFcsPadding.scala 343:46]
    node _T_30 = bits(Crc, 29, 29) @[EthFcsPadding.scala 343:61]
    node _T_31 = xor(_T_29, _T_30) @[EthFcsPadding.scala 343:56]
    node _T_32 = bits(Crc, 30, 30) @[EthFcsPadding.scala 343:71]
    node _T_33 = xor(_T_31, _T_32) @[EthFcsPadding.scala 343:66]
    node _T_34 = bits(Crc, 31, 31) @[EthFcsPadding.scala 343:81]
    node _T_35 = xor(_T_33, _T_34) @[EthFcsPadding.scala 343:76]
    node _T_36 = and(Enable, _T_35) @[EthFcsPadding.scala 343:25]
    CrcNext[3] <= _T_36 @[EthFcsPadding.scala 343:15]
    node _T_37 = bits(Data, 3, 3) @[EthFcsPadding.scala 344:33]
    node _T_38 = bits(Data, 2, 2) @[EthFcsPadding.scala 344:43]
    node _T_39 = xor(_T_37, _T_38) @[EthFcsPadding.scala 344:37]
    node _T_40 = bits(Data, 0, 0) @[EthFcsPadding.scala 344:53]
    node _T_41 = xor(_T_39, _T_40) @[EthFcsPadding.scala 344:47]
    node _T_42 = bits(Crc, 28, 28) @[EthFcsPadding.scala 344:62]
    node _T_43 = xor(_T_41, _T_42) @[EthFcsPadding.scala 344:57]
    node _T_44 = bits(Crc, 30, 30) @[EthFcsPadding.scala 344:72]
    node _T_45 = xor(_T_43, _T_44) @[EthFcsPadding.scala 344:67]
    node _T_46 = bits(Crc, 31, 31) @[EthFcsPadding.scala 344:82]
    node _T_47 = xor(_T_45, _T_46) @[EthFcsPadding.scala 344:77]
    node _T_48 = and(Enable, _T_47) @[EthFcsPadding.scala 344:26]
    node _T_49 = bits(Crc, 0, 0) @[EthFcsPadding.scala 344:94]
    node _T_50 = xor(_T_48, _T_49) @[EthFcsPadding.scala 344:89]
    CrcNext[4] <= _T_50 @[EthFcsPadding.scala 344:15]
    node _T_51 = bits(Data, 3, 3) @[EthFcsPadding.scala 345:33]
    node _T_52 = bits(Data, 1, 1) @[EthFcsPadding.scala 345:43]
    node _T_53 = xor(_T_51, _T_52) @[EthFcsPadding.scala 345:37]
    node _T_54 = bits(Data, 0, 0) @[EthFcsPadding.scala 345:53]
    node _T_55 = xor(_T_53, _T_54) @[EthFcsPadding.scala 345:47]
    node _T_56 = bits(Crc, 28, 28) @[EthFcsPadding.scala 345:62]
    node _T_57 = xor(_T_55, _T_56) @[EthFcsPadding.scala 345:57]
    node _T_58 = bits(Crc, 29, 29) @[EthFcsPadding.scala 345:72]
    node _T_59 = xor(_T_57, _T_58) @[EthFcsPadding.scala 345:67]
    node _T_60 = bits(Crc, 31, 31) @[EthFcsPadding.scala 345:82]
    node _T_61 = xor(_T_59, _T_60) @[EthFcsPadding.scala 345:77]
    node _T_62 = and(Enable, _T_61) @[EthFcsPadding.scala 345:26]
    node _T_63 = bits(Crc, 1, 1) @[EthFcsPadding.scala 345:94]
    node _T_64 = xor(_T_62, _T_63) @[EthFcsPadding.scala 345:89]
    CrcNext[5] <= _T_64 @[EthFcsPadding.scala 345:15]
    node _T_65 = bits(Data, 2, 2) @[EthFcsPadding.scala 346:33]
    node _T_66 = bits(Data, 1, 1) @[EthFcsPadding.scala 346:43]
    node _T_67 = xor(_T_65, _T_66) @[EthFcsPadding.scala 346:37]
    node _T_68 = bits(Crc, 29, 29) @[EthFcsPadding.scala 346:52]
    node _T_69 = xor(_T_67, _T_68) @[EthFcsPadding.scala 346:47]
    node _T_70 = bits(Crc, 30, 30) @[EthFcsPadding.scala 346:62]
    node _T_71 = xor(_T_69, _T_70) @[EthFcsPadding.scala 346:57]
    node _T_72 = and(Enable, _T_71) @[EthFcsPadding.scala 346:26]
    node _T_73 = bits(Crc, 2, 2) @[EthFcsPadding.scala 346:74]
    node _T_74 = xor(_T_72, _T_73) @[EthFcsPadding.scala 346:69]
    CrcNext[6] <= _T_74 @[EthFcsPadding.scala 346:15]
    node _T_75 = bits(Data, 3, 3) @[EthFcsPadding.scala 347:33]
    node _T_76 = bits(Data, 2, 2) @[EthFcsPadding.scala 347:43]
    node _T_77 = xor(_T_75, _T_76) @[EthFcsPadding.scala 347:37]
    node _T_78 = bits(Data, 0, 0) @[EthFcsPadding.scala 347:53]
    node _T_79 = xor(_T_77, _T_78) @[EthFcsPadding.scala 347:47]
    node _T_80 = bits(Crc, 28, 28) @[EthFcsPadding.scala 347:62]
    node _T_81 = xor(_T_79, _T_80) @[EthFcsPadding.scala 347:57]
    node _T_82 = bits(Crc, 30, 30) @[EthFcsPadding.scala 347:72]
    node _T_83 = xor(_T_81, _T_82) @[EthFcsPadding.scala 347:67]
    node _T_84 = bits(Crc, 31, 31) @[EthFcsPadding.scala 347:82]
    node _T_85 = xor(_T_83, _T_84) @[EthFcsPadding.scala 347:77]
    node _T_86 = and(Enable, _T_85) @[EthFcsPadding.scala 347:26]
    node _T_87 = bits(Crc, 3, 3) @[EthFcsPadding.scala 347:94]
    node _T_88 = xor(_T_86, _T_87) @[EthFcsPadding.scala 347:89]
    CrcNext[7] <= _T_88 @[EthFcsPadding.scala 347:15]
    node _T_89 = bits(Data, 3, 3) @[EthFcsPadding.scala 348:33]
    node _T_90 = bits(Data, 1, 1) @[EthFcsPadding.scala 348:43]
    node _T_91 = xor(_T_89, _T_90) @[EthFcsPadding.scala 348:37]
    node _T_92 = bits(Data, 0, 0) @[EthFcsPadding.scala 348:53]
    node _T_93 = xor(_T_91, _T_92) @[EthFcsPadding.scala 348:47]
    node _T_94 = bits(Crc, 28, 28) @[EthFcsPadding.scala 348:62]
    node _T_95 = xor(_T_93, _T_94) @[EthFcsPadding.scala 348:57]
    node _T_96 = bits(Crc, 29, 29) @[EthFcsPadding.scala 348:72]
    node _T_97 = xor(_T_95, _T_96) @[EthFcsPadding.scala 348:67]
    node _T_98 = bits(Crc, 31, 31) @[EthFcsPadding.scala 348:82]
    node _T_99 = xor(_T_97, _T_98) @[EthFcsPadding.scala 348:77]
    node _T_100 = and(Enable, _T_99) @[EthFcsPadding.scala 348:26]
    node _T_101 = bits(Crc, 4, 4) @[EthFcsPadding.scala 348:94]
    node _T_102 = xor(_T_100, _T_101) @[EthFcsPadding.scala 348:89]
    CrcNext[8] <= _T_102 @[EthFcsPadding.scala 348:15]
    node _T_103 = bits(Data, 2, 2) @[EthFcsPadding.scala 349:33]
    node _T_104 = bits(Data, 1, 1) @[EthFcsPadding.scala 349:43]
    node _T_105 = xor(_T_103, _T_104) @[EthFcsPadding.scala 349:37]
    node _T_106 = bits(Crc, 29, 29) @[EthFcsPadding.scala 349:52]
    node _T_107 = xor(_T_105, _T_106) @[EthFcsPadding.scala 349:47]
    node _T_108 = bits(Crc, 30, 30) @[EthFcsPadding.scala 349:62]
    node _T_109 = xor(_T_107, _T_108) @[EthFcsPadding.scala 349:57]
    node _T_110 = and(Enable, _T_109) @[EthFcsPadding.scala 349:26]
    node _T_111 = bits(Crc, 5, 5) @[EthFcsPadding.scala 349:74]
    node _T_112 = xor(_T_110, _T_111) @[EthFcsPadding.scala 349:69]
    CrcNext[9] <= _T_112 @[EthFcsPadding.scala 349:15]
    node _T_113 = bits(Data, 3, 3) @[EthFcsPadding.scala 350:33]
    node _T_114 = bits(Data, 2, 2) @[EthFcsPadding.scala 350:43]
    node _T_115 = xor(_T_113, _T_114) @[EthFcsPadding.scala 350:37]
    node _T_116 = bits(Data, 0, 0) @[EthFcsPadding.scala 350:53]
    node _T_117 = xor(_T_115, _T_116) @[EthFcsPadding.scala 350:47]
    node _T_118 = bits(Crc, 28, 28) @[EthFcsPadding.scala 350:62]
    node _T_119 = xor(_T_117, _T_118) @[EthFcsPadding.scala 350:57]
    node _T_120 = bits(Crc, 30, 30) @[EthFcsPadding.scala 350:72]
    node _T_121 = xor(_T_119, _T_120) @[EthFcsPadding.scala 350:67]
    node _T_122 = bits(Crc, 31, 31) @[EthFcsPadding.scala 350:82]
    node _T_123 = xor(_T_121, _T_122) @[EthFcsPadding.scala 350:77]
    node _T_124 = and(Enable, _T_123) @[EthFcsPadding.scala 350:26]
    node _T_125 = bits(Crc, 6, 6) @[EthFcsPadding.scala 350:94]
    node _T_126 = xor(_T_124, _T_125) @[EthFcsPadding.scala 350:89]
    CrcNext[10] <= _T_126 @[EthFcsPadding.scala 350:15]
    node _T_127 = bits(Data, 3, 3) @[EthFcsPadding.scala 351:33]
    node _T_128 = bits(Data, 1, 1) @[EthFcsPadding.scala 351:43]
    node _T_129 = xor(_T_127, _T_128) @[EthFcsPadding.scala 351:37]
    node _T_130 = bits(Data, 0, 0) @[EthFcsPadding.scala 351:53]
    node _T_131 = xor(_T_129, _T_130) @[EthFcsPadding.scala 351:47]
    node _T_132 = bits(Crc, 28, 28) @[EthFcsPadding.scala 351:62]
    node _T_133 = xor(_T_131, _T_132) @[EthFcsPadding.scala 351:57]
    node _T_134 = bits(Crc, 29, 29) @[EthFcsPadding.scala 351:72]
    node _T_135 = xor(_T_133, _T_134) @[EthFcsPadding.scala 351:67]
    node _T_136 = bits(Crc, 31, 31) @[EthFcsPadding.scala 351:82]
    node _T_137 = xor(_T_135, _T_136) @[EthFcsPadding.scala 351:77]
    node _T_138 = and(Enable, _T_137) @[EthFcsPadding.scala 351:26]
    node _T_139 = bits(Crc, 7, 7) @[EthFcsPadding.scala 351:94]
    node _T_140 = xor(_T_138, _T_139) @[EthFcsPadding.scala 351:89]
    CrcNext[11] <= _T_140 @[EthFcsPadding.scala 351:15]
    node _T_141 = bits(Data, 2, 2) @[EthFcsPadding.scala 352:33]
    node _T_142 = bits(Data, 1, 1) @[EthFcsPadding.scala 352:43]
    node _T_143 = xor(_T_141, _T_142) @[EthFcsPadding.scala 352:37]
    node _T_144 = bits(Data, 0, 0) @[EthFcsPadding.scala 352:53]
    node _T_145 = xor(_T_143, _T_144) @[EthFcsPadding.scala 352:47]
    node _T_146 = bits(Crc, 28, 28) @[EthFcsPadding.scala 352:62]
    node _T_147 = xor(_T_145, _T_146) @[EthFcsPadding.scala 352:57]
    node _T_148 = bits(Crc, 29, 29) @[EthFcsPadding.scala 352:72]
    node _T_149 = xor(_T_147, _T_148) @[EthFcsPadding.scala 352:67]
    node _T_150 = bits(Crc, 30, 30) @[EthFcsPadding.scala 352:82]
    node _T_151 = xor(_T_149, _T_150) @[EthFcsPadding.scala 352:77]
    node _T_152 = and(Enable, _T_151) @[EthFcsPadding.scala 352:26]
    node _T_153 = bits(Crc, 8, 8) @[EthFcsPadding.scala 352:94]
    node _T_154 = xor(_T_152, _T_153) @[EthFcsPadding.scala 352:89]
    CrcNext[12] <= _T_154 @[EthFcsPadding.scala 352:15]
    node _T_155 = bits(Data, 3, 3) @[EthFcsPadding.scala 353:33]
    node _T_156 = bits(Data, 2, 2) @[EthFcsPadding.scala 353:43]
    node _T_157 = xor(_T_155, _T_156) @[EthFcsPadding.scala 353:37]
    node _T_158 = bits(Data, 1, 1) @[EthFcsPadding.scala 353:53]
    node _T_159 = xor(_T_157, _T_158) @[EthFcsPadding.scala 353:47]
    node _T_160 = bits(Crc, 29, 29) @[EthFcsPadding.scala 353:62]
    node _T_161 = xor(_T_159, _T_160) @[EthFcsPadding.scala 353:57]
    node _T_162 = bits(Crc, 30, 30) @[EthFcsPadding.scala 353:72]
    node _T_163 = xor(_T_161, _T_162) @[EthFcsPadding.scala 353:67]
    node _T_164 = bits(Crc, 31, 31) @[EthFcsPadding.scala 353:82]
    node _T_165 = xor(_T_163, _T_164) @[EthFcsPadding.scala 353:77]
    node _T_166 = and(Enable, _T_165) @[EthFcsPadding.scala 353:26]
    node _T_167 = bits(Crc, 9, 9) @[EthFcsPadding.scala 353:94]
    node _T_168 = xor(_T_166, _T_167) @[EthFcsPadding.scala 353:89]
    CrcNext[13] <= _T_168 @[EthFcsPadding.scala 353:15]
    node _T_169 = bits(Data, 3, 3) @[EthFcsPadding.scala 354:33]
    node _T_170 = bits(Data, 2, 2) @[EthFcsPadding.scala 354:43]
    node _T_171 = xor(_T_169, _T_170) @[EthFcsPadding.scala 354:37]
    node _T_172 = bits(Crc, 30, 30) @[EthFcsPadding.scala 354:52]
    node _T_173 = xor(_T_171, _T_172) @[EthFcsPadding.scala 354:47]
    node _T_174 = bits(Crc, 31, 31) @[EthFcsPadding.scala 354:62]
    node _T_175 = xor(_T_173, _T_174) @[EthFcsPadding.scala 354:57]
    node _T_176 = and(Enable, _T_175) @[EthFcsPadding.scala 354:26]
    node _T_177 = bits(Crc, 10, 10) @[EthFcsPadding.scala 354:74]
    node _T_178 = xor(_T_176, _T_177) @[EthFcsPadding.scala 354:69]
    CrcNext[14] <= _T_178 @[EthFcsPadding.scala 354:15]
    node _T_179 = bits(Data, 3, 3) @[EthFcsPadding.scala 355:33]
    node _T_180 = bits(Crc, 31, 31) @[EthFcsPadding.scala 355:42]
    node _T_181 = xor(_T_179, _T_180) @[EthFcsPadding.scala 355:37]
    node _T_182 = and(Enable, _T_181) @[EthFcsPadding.scala 355:26]
    node _T_183 = bits(Crc, 11, 11) @[EthFcsPadding.scala 355:54]
    node _T_184 = xor(_T_182, _T_183) @[EthFcsPadding.scala 355:49]
    CrcNext[15] <= _T_184 @[EthFcsPadding.scala 355:15]
    node _T_185 = bits(Data, 0, 0) @[EthFcsPadding.scala 356:33]
    node _T_186 = bits(Crc, 28, 28) @[EthFcsPadding.scala 356:42]
    node _T_187 = xor(_T_185, _T_186) @[EthFcsPadding.scala 356:37]
    node _T_188 = and(Enable, _T_187) @[EthFcsPadding.scala 356:26]
    node _T_189 = bits(Crc, 12, 12) @[EthFcsPadding.scala 356:54]
    node _T_190 = xor(_T_188, _T_189) @[EthFcsPadding.scala 356:49]
    CrcNext[16] <= _T_190 @[EthFcsPadding.scala 356:15]
    node _T_191 = bits(Data, 1, 1) @[EthFcsPadding.scala 357:33]
    node _T_192 = bits(Crc, 29, 29) @[EthFcsPadding.scala 357:42]
    node _T_193 = xor(_T_191, _T_192) @[EthFcsPadding.scala 357:37]
    node _T_194 = and(Enable, _T_193) @[EthFcsPadding.scala 357:26]
    node _T_195 = bits(Crc, 13, 13) @[EthFcsPadding.scala 357:54]
    node _T_196 = xor(_T_194, _T_195) @[EthFcsPadding.scala 357:49]
    CrcNext[17] <= _T_196 @[EthFcsPadding.scala 357:15]
    node _T_197 = bits(Data, 2, 2) @[EthFcsPadding.scala 358:33]
    node _T_198 = bits(Crc, 30, 30) @[EthFcsPadding.scala 358:42]
    node _T_199 = xor(_T_197, _T_198) @[EthFcsPadding.scala 358:37]
    node _T_200 = and(Enable, _T_199) @[EthFcsPadding.scala 358:26]
    node _T_201 = bits(Crc, 14, 14) @[EthFcsPadding.scala 358:54]
    node _T_202 = xor(_T_200, _T_201) @[EthFcsPadding.scala 358:49]
    CrcNext[18] <= _T_202 @[EthFcsPadding.scala 358:15]
    node _T_203 = bits(Data, 3, 3) @[EthFcsPadding.scala 359:33]
    node _T_204 = bits(Crc, 31, 31) @[EthFcsPadding.scala 359:42]
    node _T_205 = xor(_T_203, _T_204) @[EthFcsPadding.scala 359:37]
    node _T_206 = and(Enable, _T_205) @[EthFcsPadding.scala 359:26]
    node _T_207 = bits(Crc, 15, 15) @[EthFcsPadding.scala 359:54]
    node _T_208 = xor(_T_206, _T_207) @[EthFcsPadding.scala 359:49]
    CrcNext[19] <= _T_208 @[EthFcsPadding.scala 359:15]
    node _T_209 = bits(Crc, 16, 16) @[EthFcsPadding.scala 360:21]
    CrcNext[20] <= _T_209 @[EthFcsPadding.scala 360:15]
    node _T_210 = bits(Crc, 17, 17) @[EthFcsPadding.scala 361:21]
    CrcNext[21] <= _T_210 @[EthFcsPadding.scala 361:15]
    node _T_211 = bits(Data, 0, 0) @[EthFcsPadding.scala 362:33]
    node _T_212 = bits(Crc, 28, 28) @[EthFcsPadding.scala 362:42]
    node _T_213 = xor(_T_211, _T_212) @[EthFcsPadding.scala 362:37]
    node _T_214 = and(Enable, _T_213) @[EthFcsPadding.scala 362:26]
    node _T_215 = bits(Crc, 18, 18) @[EthFcsPadding.scala 362:54]
    node _T_216 = xor(_T_214, _T_215) @[EthFcsPadding.scala 362:49]
    CrcNext[22] <= _T_216 @[EthFcsPadding.scala 362:15]
    node _T_217 = bits(Data, 1, 1) @[EthFcsPadding.scala 363:33]
    node _T_218 = bits(Data, 0, 0) @[EthFcsPadding.scala 363:43]
    node _T_219 = xor(_T_217, _T_218) @[EthFcsPadding.scala 363:37]
    node _T_220 = bits(Crc, 29, 29) @[EthFcsPadding.scala 363:52]
    node _T_221 = xor(_T_219, _T_220) @[EthFcsPadding.scala 363:47]
    node _T_222 = bits(Crc, 28, 28) @[EthFcsPadding.scala 363:62]
    node _T_223 = xor(_T_221, _T_222) @[EthFcsPadding.scala 363:57]
    node _T_224 = and(Enable, _T_223) @[EthFcsPadding.scala 363:26]
    node _T_225 = bits(Crc, 19, 19) @[EthFcsPadding.scala 363:74]
    node _T_226 = xor(_T_224, _T_225) @[EthFcsPadding.scala 363:69]
    CrcNext[23] <= _T_226 @[EthFcsPadding.scala 363:15]
    node _T_227 = bits(Data, 2, 2) @[EthFcsPadding.scala 364:33]
    node _T_228 = bits(Data, 1, 1) @[EthFcsPadding.scala 364:43]
    node _T_229 = xor(_T_227, _T_228) @[EthFcsPadding.scala 364:37]
    node _T_230 = bits(Crc, 30, 30) @[EthFcsPadding.scala 364:52]
    node _T_231 = xor(_T_229, _T_230) @[EthFcsPadding.scala 364:47]
    node _T_232 = bits(Crc, 29, 29) @[EthFcsPadding.scala 364:62]
    node _T_233 = xor(_T_231, _T_232) @[EthFcsPadding.scala 364:57]
    node _T_234 = and(Enable, _T_233) @[EthFcsPadding.scala 364:26]
    node _T_235 = bits(Crc, 20, 20) @[EthFcsPadding.scala 364:74]
    node _T_236 = xor(_T_234, _T_235) @[EthFcsPadding.scala 364:69]
    CrcNext[24] <= _T_236 @[EthFcsPadding.scala 364:15]
    node _T_237 = bits(Data, 3, 3) @[EthFcsPadding.scala 365:33]
    node _T_238 = bits(Data, 2, 2) @[EthFcsPadding.scala 365:43]
    node _T_239 = xor(_T_237, _T_238) @[EthFcsPadding.scala 365:37]
    node _T_240 = bits(Crc, 31, 31) @[EthFcsPadding.scala 365:52]
    node _T_241 = xor(_T_239, _T_240) @[EthFcsPadding.scala 365:47]
    node _T_242 = bits(Crc, 30, 30) @[EthFcsPadding.scala 365:62]
    node _T_243 = xor(_T_241, _T_242) @[EthFcsPadding.scala 365:57]
    node _T_244 = and(Enable, _T_243) @[EthFcsPadding.scala 365:26]
    node _T_245 = bits(Crc, 21, 21) @[EthFcsPadding.scala 365:74]
    node _T_246 = xor(_T_244, _T_245) @[EthFcsPadding.scala 365:69]
    CrcNext[25] <= _T_246 @[EthFcsPadding.scala 365:15]
    node _T_247 = bits(Data, 3, 3) @[EthFcsPadding.scala 366:33]
    node _T_248 = bits(Data, 0, 0) @[EthFcsPadding.scala 366:43]
    node _T_249 = xor(_T_247, _T_248) @[EthFcsPadding.scala 366:37]
    node _T_250 = bits(Crc, 31, 31) @[EthFcsPadding.scala 366:52]
    node _T_251 = xor(_T_249, _T_250) @[EthFcsPadding.scala 366:47]
    node _T_252 = bits(Crc, 28, 28) @[EthFcsPadding.scala 366:62]
    node _T_253 = xor(_T_251, _T_252) @[EthFcsPadding.scala 366:57]
    node _T_254 = and(Enable, _T_253) @[EthFcsPadding.scala 366:26]
    node _T_255 = bits(Crc, 22, 22) @[EthFcsPadding.scala 366:74]
    node _T_256 = xor(_T_254, _T_255) @[EthFcsPadding.scala 366:69]
    CrcNext[26] <= _T_256 @[EthFcsPadding.scala 366:15]
    node _T_257 = bits(Data, 1, 1) @[EthFcsPadding.scala 367:33]
    node _T_258 = bits(Crc, 29, 29) @[EthFcsPadding.scala 367:42]
    node _T_259 = xor(_T_257, _T_258) @[EthFcsPadding.scala 367:37]
    node _T_260 = and(Enable, _T_259) @[EthFcsPadding.scala 367:26]
    node _T_261 = bits(Crc, 23, 23) @[EthFcsPadding.scala 367:54]
    node _T_262 = xor(_T_260, _T_261) @[EthFcsPadding.scala 367:49]
    CrcNext[27] <= _T_262 @[EthFcsPadding.scala 367:15]
    node _T_263 = bits(Data, 2, 2) @[EthFcsPadding.scala 368:33]
    node _T_264 = bits(Crc, 30, 30) @[EthFcsPadding.scala 368:42]
    node _T_265 = xor(_T_263, _T_264) @[EthFcsPadding.scala 368:37]
    node _T_266 = and(Enable, _T_265) @[EthFcsPadding.scala 368:26]
    node _T_267 = bits(Crc, 24, 24) @[EthFcsPadding.scala 368:54]
    node _T_268 = xor(_T_266, _T_267) @[EthFcsPadding.scala 368:49]
    CrcNext[28] <= _T_268 @[EthFcsPadding.scala 368:15]
    node _T_269 = bits(Data, 3, 3) @[EthFcsPadding.scala 369:33]
    node _T_270 = bits(Crc, 31, 31) @[EthFcsPadding.scala 369:42]
    node _T_271 = xor(_T_269, _T_270) @[EthFcsPadding.scala 369:37]
    node _T_272 = and(Enable, _T_271) @[EthFcsPadding.scala 369:26]
    node _T_273 = bits(Crc, 25, 25) @[EthFcsPadding.scala 369:54]
    node _T_274 = xor(_T_272, _T_273) @[EthFcsPadding.scala 369:49]
    CrcNext[29] <= _T_274 @[EthFcsPadding.scala 369:15]
    node _T_275 = bits(Crc, 26, 26) @[EthFcsPadding.scala 370:21]
    CrcNext[30] <= _T_275 @[EthFcsPadding.scala 370:15]
    node _T_276 = bits(Crc, 27, 27) @[EthFcsPadding.scala 371:21]
    CrcNext[31] <= _T_276 @[EthFcsPadding.scala 371:15]
    when io.Initialize : @[EthFcsPadding.scala 373:24]
      Crc <= UInt<32>("h0ffffffff") @[EthFcsPadding.scala 374:9]
      skip @[EthFcsPadding.scala 373:24]
    else : @[EthFcsPadding.scala 375:23]
      when io.En : @[EthFcsPadding.scala 375:23]
        wire _T_277 : UInt<32> @[EthFcsPadding.scala 376:28]
        node _T_278 = cat(CrcNext[1], CrcNext[0]) @[EthFcsPadding.scala 376:28]
        node _T_279 = cat(CrcNext[3], CrcNext[2]) @[EthFcsPadding.scala 376:28]
        node _T_280 = cat(_T_279, _T_278) @[EthFcsPadding.scala 376:28]
        node _T_281 = cat(CrcNext[5], CrcNext[4]) @[EthFcsPadding.scala 376:28]
        node _T_282 = cat(CrcNext[7], CrcNext[6]) @[EthFcsPadding.scala 376:28]
        node _T_283 = cat(_T_282, _T_281) @[EthFcsPadding.scala 376:28]
        node _T_284 = cat(_T_283, _T_280) @[EthFcsPadding.scala 376:28]
        node _T_285 = cat(CrcNext[9], CrcNext[8]) @[EthFcsPadding.scala 376:28]
        node _T_286 = cat(CrcNext[11], CrcNext[10]) @[EthFcsPadding.scala 376:28]
        node _T_287 = cat(_T_286, _T_285) @[EthFcsPadding.scala 376:28]
        node _T_288 = cat(CrcNext[13], CrcNext[12]) @[EthFcsPadding.scala 376:28]
        node _T_289 = cat(CrcNext[15], CrcNext[14]) @[EthFcsPadding.scala 376:28]
        node _T_290 = cat(_T_289, _T_288) @[EthFcsPadding.scala 376:28]
        node _T_291 = cat(_T_290, _T_287) @[EthFcsPadding.scala 376:28]
        node _T_292 = cat(_T_291, _T_284) @[EthFcsPadding.scala 376:28]
        node _T_293 = cat(CrcNext[17], CrcNext[16]) @[EthFcsPadding.scala 376:28]
        node _T_294 = cat(CrcNext[19], CrcNext[18]) @[EthFcsPadding.scala 376:28]
        node _T_295 = cat(_T_294, _T_293) @[EthFcsPadding.scala 376:28]
        node _T_296 = cat(CrcNext[21], CrcNext[20]) @[EthFcsPadding.scala 376:28]
        node _T_297 = cat(CrcNext[23], CrcNext[22]) @[EthFcsPadding.scala 376:28]
        node _T_298 = cat(_T_297, _T_296) @[EthFcsPadding.scala 376:28]
        node _T_299 = cat(_T_298, _T_295) @[EthFcsPadding.scala 376:28]
        node _T_300 = cat(CrcNext[25], CrcNext[24]) @[EthFcsPadding.scala 376:28]
        node _T_301 = cat(CrcNext[27], CrcNext[26]) @[EthFcsPadding.scala 376:28]
        node _T_302 = cat(_T_301, _T_300) @[EthFcsPadding.scala 376:28]
        node _T_303 = cat(CrcNext[29], CrcNext[28]) @[EthFcsPadding.scala 376:28]
        node _T_304 = cat(CrcNext[31], CrcNext[30]) @[EthFcsPadding.scala 376:28]
        node _T_305 = cat(_T_304, _T_303) @[EthFcsPadding.scala 376:28]
        node _T_306 = cat(_T_305, _T_302) @[EthFcsPadding.scala 376:28]
        node _T_307 = cat(_T_306, _T_299) @[EthFcsPadding.scala 376:28]
        node _T_308 = cat(_T_307, _T_292) @[EthFcsPadding.scala 376:28]
        _T_277 <= _T_308 @[EthFcsPadding.scala 376:28]
        Crc <= _T_277 @[EthFcsPadding.scala 376:9]
        skip @[EthFcsPadding.scala 375:23]
    node _T_309 = neq(Crc, UInt<32>("h0c704dd7b")) @[EthFcsPadding.scala 379:22]
    io.CrcError <= _T_309 @[EthFcsPadding.scala 379:15]
    
  module CRCChecker : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip mii_clk : UInt<1>, flip mii_en : UInt<1>, flip mii_dat : UInt<4>, ok : UInt<1>, err : UInt<1>}
    
    inst crc32_d4 of CRC32_D4 @[EthFcsPadding.scala 391:24]
    crc32_d4.clock <= clock
    crc32_d4.reset <= reset
    reg _T : UInt<1>, clock @[util.scala 13:42]
    _T <= io.mii_clk @[util.scala 13:42]
    node _T_1 = eq(_T, UInt<1>("h00")) @[util.scala 13:34]
    node mii_clk = and(io.mii_clk, _T_1) @[util.scala 13:31]
    wire mii_en : UInt<1>
    mii_en <= UInt<1>("h00")
    wire mii_dat : UInt<4>
    mii_dat <= UInt<4>("h00")
    mii_en <= io.mii_en @[EthFcsPadding.scala 397:11]
    mii_dat <= io.mii_dat @[EthFcsPadding.scala 398:11]
    reg state : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[EthFcsPadding.scala 407:22]
    wire next_state : UInt<2>
    next_state <= UInt<2>("h00")
    state <= next_state @[EthFcsPadding.scala 410:9]
    next_state <= state @[EthFcsPadding.scala 411:14]
    io.ok <= UInt<1>("h00") @[EthFcsPadding.scala 413:10]
    io.err <= UInt<1>("h00") @[EthFcsPadding.scala 414:10]
    node _T_2 = eq(UInt<2>("h00"), state) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      reg _T_3 : UInt<1>, clock @[util.scala 13:42]
      _T_3 <= io.mii_en @[util.scala 13:42]
      node _T_4 = eq(_T_3, UInt<1>("h00")) @[util.scala 13:34]
      node _T_5 = and(io.mii_en, _T_4) @[util.scala 13:31]
      when _T_5 : @[EthFcsPadding.scala 418:36]
        next_state <= UInt<2>("h01") @[EthFcsPadding.scala 419:20]
        skip @[EthFcsPadding.scala 418:36]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_6 = eq(UInt<2>("h01"), state) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        when mii_clk : @[EthFcsPadding.scala 423:22]
          node _T_7 = eq(mii_dat, UInt<4>("h0d")) @[EthFcsPadding.scala 424:23]
          when _T_7 : @[EthFcsPadding.scala 424:34]
            next_state <= UInt<2>("h02") @[EthFcsPadding.scala 425:22]
            skip @[EthFcsPadding.scala 424:34]
          skip @[EthFcsPadding.scala 423:22]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_8 = eq(UInt<2>("h02"), state) @[Conditional.scala 37:30]
        when _T_8 : @[Conditional.scala 39:67]
          when mii_clk : @[EthFcsPadding.scala 430:22]
            node _T_9 = not(mii_en) @[EthFcsPadding.scala 431:15]
            when _T_9 : @[EthFcsPadding.scala 431:24]
              next_state <= UInt<2>("h00") @[EthFcsPadding.scala 432:22]
              io.err <= crc32_d4.io.CrcError @[EthFcsPadding.scala 433:18]
              node _T_10 = not(crc32_d4.io.CrcError) @[EthFcsPadding.scala 434:21]
              io.ok <= _T_10 @[EthFcsPadding.scala 434:18]
              skip @[EthFcsPadding.scala 431:24]
            skip @[EthFcsPadding.scala 430:22]
          skip @[Conditional.scala 39:67]
    node _T_11 = and(mii_en, mii_clk) @[EthFcsPadding.scala 440:37]
    crc32_d4.io.En <= _T_11 @[EthFcsPadding.scala 440:27]
    node _T_12 = bits(mii_dat, 0, 0) @[EthFcsPadding.scala 441:41]
    node _T_13 = bits(mii_dat, 1, 1) @[EthFcsPadding.scala 441:53]
    node _T_14 = bits(mii_dat, 2, 2) @[EthFcsPadding.scala 441:65]
    node _T_15 = bits(mii_dat, 3, 3) @[EthFcsPadding.scala 441:77]
    node _T_16 = cat(_T_14, _T_15) @[Cat.scala 29:58]
    node _T_17 = cat(_T_12, _T_13) @[Cat.scala 29:58]
    node _T_18 = cat(_T_17, _T_16) @[Cat.scala 29:58]
    crc32_d4.io.Data <= _T_18 @[EthFcsPadding.scala 441:27]
    node _T_19 = eq(state, UInt<2>("h02")) @[EthFcsPadding.scala 442:46]
    node _T_20 = and(mii_en, _T_19) @[EthFcsPadding.scala 442:37]
    crc32_d4.io.Enable <= _T_20 @[EthFcsPadding.scala 442:27]
    node _T_21 = eq(state, UInt<2>("h01")) @[EthFcsPadding.scala 443:36]
    crc32_d4.io.Initialize <= _T_21 @[EthFcsPadding.scala 443:27]
    
